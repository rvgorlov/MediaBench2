Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -c -o jchuff.o

Begin optimization report for: start_pass_huff(j_compress_ptr, boolean)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jchuff.c(124,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jchuff.c(211,3) inlined into jchuff.c(152,7)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25452: Original Order found to be proper, but by a close margin
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at jchuff.c(215,5) inlined into jchuff.c(152,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.400 
         remark #15478: estimated potential speedup: 6.210 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=8
      LOOP END

      LOOP BEGIN at jchuff.c(215,5) inlined into jchuff.c(152,7)
      <Remainder loop for vectorization>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         remark #25015: Estimate of max trip count of loop=257
      LOOP END
   LOOP END

   LOOP BEGIN at jchuff.c(227,3) inlined into jchuff.c(152,7)
      remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at jchuff.c(228,5) inlined into jchuff.c(152,7)
         remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 2  
      LOOP END
   LOOP END

   LOOP BEGIN at jchuff.c(257,3) inlined into jchuff.c(152,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *pdtbl->ehufsi[i] (259:5) and *pdtbl->ehufsi[i] (262:5)
      remark #25015: Estimate of max trip count of loop=256
   LOOP END

   LOOP BEGIN at jchuff.c(211,3) inlined into jchuff.c(154,7)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25452: Original Order found to be proper, but by a close margin
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at jchuff.c(215,5) inlined into jchuff.c(154,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.400 
         remark #15478: estimated potential speedup: 6.210 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=8
      LOOP END

      LOOP BEGIN at jchuff.c(215,5) inlined into jchuff.c(154,7)
      <Remainder loop for vectorization>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         remark #25015: Estimate of max trip count of loop=257
      LOOP END
   LOOP END

   LOOP BEGIN at jchuff.c(227,3) inlined into jchuff.c(154,7)
      remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at jchuff.c(228,5) inlined into jchuff.c(154,7)
         remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 2  
      LOOP END
   LOOP END

   LOOP BEGIN at jchuff.c(257,3) inlined into jchuff.c(154,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *pdtbl->ehufsi[i] (259:5) and *pdtbl->ehufsi[i] (262:5)
      remark #25015: Estimate of max trip count of loop=256
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jpeg_make_c_derived_tbl(j_compress_ptr, boolean, int, c_derived_tbl **)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jchuff.c(211,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jchuff.c(215,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.400 
      remark #15478: estimated potential speedup: 6.210 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=8
   LOOP END

   LOOP BEGIN at jchuff.c(215,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      remark #25015: Estimate of max trip count of loop=257
   LOOP END
LOOP END

LOOP BEGIN at jchuff.c(227,3)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jchuff.c(228,5)
      remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

LOOP BEGIN at jchuff.c(257,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *pdtbl->ehufsi[i] (259:5) and *pdtbl->ehufsi[i] (262:5)
   remark #25015: Estimate of max trip count of loop=256
LOOP END
===========================================================================

Begin optimization report for: encode_mcu_huff(j_compress_ptr, JBLOCKROW *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jchuff.c(486,3)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jchuff.c(321,3) inlined into jchuff.c(492,13)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jchuff.c(342,9) ]
LOOP END

LOOP BEGIN at jchuff.c(462,3) inlined into jchuff.c(492,13)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=4

   LOOP BEGIN at jchuff.c(462,3) inlined into jchuff.c(492,13)
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 1.250 
      remark #15478: estimated potential speedup: 1.450 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at jchuff.c(462,3) inlined into jchuff.c(492,13)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=24
   LOOP END

   LOOP BEGIN at jchuff.c(462,3) inlined into jchuff.c(492,13)
   <Peeled loop for vectorization>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END

LOOP BEGIN at jchuff.c(373,3) inlined into jchuff.c(500,11)
   remark #15523: loop was not vectorized: loop control variable nbits was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jchuff.c(321,3) inlined into jchuff.c(500,11)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jchuff.c(384,9) ]
LOOP END

LOOP BEGIN at jchuff.c(321,3) inlined into jchuff.c(500,11)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jchuff.c(390,11) ]
LOOP END

LOOP BEGIN at jchuff.c(402,7) inlined into jchuff.c(500,11)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at jchuff.c(321,3) inlined into jchuff.c(500,11)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jchuff.c(403,8) ]
   LOOP END
LOOP END

LOOP BEGIN at jchuff.c(417,7) inlined into jchuff.c(500,11)
   remark #15523: loop was not vectorized: loop control variable nbits was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jchuff.c(321,3) inlined into jchuff.c(500,11)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jchuff.c(425,13) ]
LOOP END

LOOP BEGIN at jchuff.c(321,3) inlined into jchuff.c(500,11)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jchuff.c(430,13) ]
LOOP END

LOOP BEGIN at jchuff.c(321,3) inlined into jchuff.c(500,11)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jchuff.c(439,11) ]
LOOP END

LOOP BEGIN at jchuff.c(512,3)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at jchuff.c(497,3)
   remark #15533: loop was not vectorized: loop exceeds complexity limits. Consider overriding limits (-override-limits) or using simd directive.

   LOOP BEGIN at jchuff.c(397,3) inlined into jchuff.c(500,11)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: finish_pass_huff(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jchuff.c(321,3) inlined into jchuff.c(545,9)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jchuff.c(342,9) ]
LOOP END
===========================================================================

Begin optimization report for: encode_mcu_gather(j_compress_ptr, JBLOCKROW *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jchuff.c(655,7)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=4

   LOOP BEGIN at jchuff.c(655,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 1.250 
      remark #15478: estimated potential speedup: 1.450 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at jchuff.c(655,7)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=24
   LOOP END
LOOP END

LOOP BEGIN at jchuff.c(663,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at jchuff.c(587,3) inlined into jchuff.c(666,5)
      remark #15523: loop was not vectorized: loop control variable nbits was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END

   LOOP BEGIN at jchuff.c(604,3) inlined into jchuff.c(666,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between ac_counts[240] (610:2) and ac_counts[r+nbits] (627:7)

      LOOP BEGIN at jchuff.c(609,7) inlined into jchuff.c(666,5)
      <Distributed chunk1>
         remark #25426: Loop Distributed (2 way) 
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between ac_counts[240] (610:2) and ac_counts[240] (610:2)
      LOOP END

      LOOP BEGIN at jchuff.c(609,7) inlined into jchuff.c(666,5)
      <Distributed chunk2>
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 1 
         remark #15477: vector cost: 0.250 
         remark #15478: estimated potential speedup: 3.840 
         remark #15488: --- end vector cost summary ---
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END

      LOOP BEGIN at jchuff.c(620,7) inlined into jchuff.c(666,5)
         remark #15523: loop was not vectorized: loop control variable nbits was found, but loop iteration count cannot be computed before executing the loop
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: finish_pass_gather(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jchuff.c(861,3)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END
===========================================================================

Begin optimization report for: jpeg_gen_optimal_table(j_compress_ptr, JHUFF_TBL *, long *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jchuff.c(719,3)
   remark #25408: memset generated
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
LOOP END

LOOP BEGIN at jchuff.c(722,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jchuff.c(735,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at jchuff.c(735,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 21 
      remark #15477: vector cost: 16.500 
      remark #15478: estimated potential speedup: 1.240 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=64
   LOOP END

   LOOP BEGIN at jchuff.c(735,5)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at jchuff.c(746,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between v (747:7) and v (748:2)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at jchuff.c(746,5)
   <Remainder>
   LOOP END

   LOOP BEGIN at jchuff.c(763,5)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
      remark #25478: While Loop Unrolled by 2  
   LOOP END

   LOOP BEGIN at jchuff.c(772,5)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at jchuff.c(779,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END

LOOP BEGIN at jchuff.c(801,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between bits[j] (804:7) and bits[j] (810:7)

   LOOP BEGIN at jchuff.c(802,5)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

      LOOP BEGIN at jchuff.c(804,7)
         remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop
         remark #25478: While Loop Unrolled by 8  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at jchuff.c(815,3)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 8  
LOOP END

LOOP BEGIN at jchuff.c(827,3)
   remark #25445: Loop Interchange not done due to: Data Dependencies
   remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
   remark #25447: Dependence found between following statements:  [830 -> (Output) 830]
   remark #25447: Dependence found between following statements:  [830 -> ( ) 830]
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between htbl->huffval[p] (830:2) and htbl->huffval[p] (830:2)

   LOOP BEGIN at jchuff.c(828,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between p (831:2) and p (830:2)
      remark #25438: unrolled without remainder by 2  
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jinit_huff_encoder(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jchuff.c(903,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 4 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 8 
   remark #15477: vector cost: 12.000 
   remark #15478: estimated potential speedup: 0.530 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 4  
LOOP END
===========================================================================
