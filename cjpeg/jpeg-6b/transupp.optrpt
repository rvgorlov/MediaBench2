Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -c -o transupp.o

Begin optimization report for: jtransform_request_workspace(j_decompress_ptr, jpeg_transform_info *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at transupp.c(621,5)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at transupp.c(599,5)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: jtransform_adjust_parameters(j_decompress_ptr, j_compress_ptr, jvirt_barray_ptr *, jpeg_transform_info *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at transupp.c(654,3) inlined into transupp.c(796,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 10.750 
   remark #15478: estimated potential speedup: 0.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(662,3) inlined into transupp.c(796,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between qtblptr->quantval[i*8+j] (667:4) and qtblptr->quantval[j*8+i] (669:4)

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(796,5)
      remark #15315: loop was not vectorized: estimated number of iterations (0) is insufficient for vectorization
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #25015: Estimate of max trip count of loop=7
   LOOP END

   LOOP BEGIN at transupp.c(665,7) inlined into transupp.c(796,5)
      remark #25436: completely unrolled by 8   (pre-vector) 
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(796,5)
      remark #15423: loop was not vectorized: has only one iteration
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(796,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.660 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 2  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(796,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.750 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 3  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(796,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.910 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(796,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.930 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 5  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(796,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.940 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 6  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(796,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.940 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(710,3) inlined into transupp.c(798,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.930 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(710,3) inlined into transupp.c(798,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at transupp.c(690,3) inlined into transupp.c(791,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.930 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(690,3) inlined into transupp.c(791,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at transupp.c(710,3) inlined into transupp.c(792,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.930 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(710,3) inlined into transupp.c(792,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at transupp.c(654,3) inlined into transupp.c(785,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 10.750 
   remark #15478: estimated potential speedup: 0.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(662,3) inlined into transupp.c(785,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between qtblptr->quantval[i*8+j] (667:4) and qtblptr->quantval[j*8+i] (669:4)

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(785,5)
      remark #15315: loop was not vectorized: estimated number of iterations (0) is insufficient for vectorization
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #25015: Estimate of max trip count of loop=7
   LOOP END

   LOOP BEGIN at transupp.c(665,7) inlined into transupp.c(785,5)
      remark #25436: completely unrolled by 8   (pre-vector) 
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(785,5)
      remark #15423: loop was not vectorized: has only one iteration
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(785,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.660 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 2  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(785,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.750 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 3  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(785,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.910 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(785,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.930 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 5  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(785,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.940 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 6  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(785,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.940 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(690,3) inlined into transupp.c(787,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.930 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(690,3) inlined into transupp.c(787,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at transupp.c(654,3) inlined into transupp.c(778,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 10.750 
   remark #15478: estimated potential speedup: 0.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(662,3) inlined into transupp.c(778,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between qtblptr->quantval[i*8+j] (667:4) and qtblptr->quantval[j*8+i] (669:4)

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(778,5)
      remark #15315: loop was not vectorized: estimated number of iterations (0) is insufficient for vectorization
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #25015: Estimate of max trip count of loop=7
   LOOP END

   LOOP BEGIN at transupp.c(665,7) inlined into transupp.c(778,5)
      remark #25436: completely unrolled by 8   (pre-vector) 
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(778,5)
      remark #15423: loop was not vectorized: has only one iteration
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(778,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.660 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 2  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(778,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.750 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 3  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(778,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.910 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(778,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.930 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 5  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(778,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.940 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 6  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(778,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.940 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(690,3) inlined into transupp.c(780,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.930 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(690,3) inlined into transupp.c(780,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at transupp.c(710,3) inlined into transupp.c(781,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.930 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(710,3) inlined into transupp.c(781,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at transupp.c(654,3) inlined into transupp.c(774,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 5 
   remark #15477: vector cost: 10.750 
   remark #15478: estimated potential speedup: 0.460 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(662,3) inlined into transupp.c(774,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between qtblptr->quantval[i*8+j] (667:4) and qtblptr->quantval[j*8+i] (669:4)

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(774,5)
      remark #15315: loop was not vectorized: estimated number of iterations (0) is insufficient for vectorization
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #25015: Estimate of max trip count of loop=7
   LOOP END

   LOOP BEGIN at transupp.c(665,7) inlined into transupp.c(774,5)
      remark #25436: completely unrolled by 8   (pre-vector) 
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(774,5)
      remark #15423: loop was not vectorized: has only one iteration
      remark #25436: completely unrolled by 1  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(774,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.660 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 2  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(774,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.750 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 3  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(774,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.910 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(774,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.930 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 5  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(774,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.940 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 6  
   LOOP END

   LOOP BEGIN at transupp.c(666,2) inlined into transupp.c(774,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 8 
      remark #15477: vector cost: 7.250 
      remark #15478: estimated potential speedup: 0.940 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 7  
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(710,3) inlined into transupp.c(771,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.930 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(710,3) inlined into transupp.c(771,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at transupp.c(690,3) inlined into transupp.c(767,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.930 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at transupp.c(690,3) inlined into transupp.c(767,7)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: jtransform_execute_transformation(j_decompress_ptr, j_compress_ptr, jvirt_barray_ptr *, jpeg_transform_info *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at transupp.c(315,3) inlined into transupp.c(848,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at transupp.c(318,5) inlined into transupp.c(848,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at transupp.c(323,7) inlined into transupp.c(848,5)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at transupp.c(324,2) inlined into transupp.c(848,5)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at transupp.c(329,4) inlined into transupp.c(848,5)
               remark #15542: loop was not vectorized: inner loop was already vectorized

               LOOP BEGIN at transupp.c(345,8) inlined into transupp.c(848,5)
                  remark #25445: Loop Interchange not done due to: Data Dependencies
                  remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
                  remark #25447: Dependence found between following statements:  [347 -> (Flow) 347]
                  remark #25447: Dependence found between following statements:  [347 -> (Anti) 347]
                  remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
                  remark #15542: loop was not vectorized: inner loop was already vectorized

                  LOOP BEGIN at transupp.c(346,3) inlined into transupp.c(848,5)
                  <Multiversioned v1>
                     remark #25228: Loop multiversioned for Data Dependence
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15453: unmasked strided stores: 1 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 5 
                     remark #15477: vector cost: 2.750 
                     remark #15478: estimated potential speedup: 1.600 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at transupp.c(346,3) inlined into transupp.c(848,5)
                  <Multiversioned v2>
                     remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
                     remark #25436: completely unrolled by 8  
                  LOOP END
               LOOP END

               LOOP BEGIN at transupp.c(335,8) inlined into transupp.c(848,5)
                  remark #25445: Loop Interchange not done due to: Data Dependencies
                  remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
                  remark #25447: Dependence found between following statements:  [337 -> (Flow) 339]
                  remark #25447: Dependence found between following statements:  [337 -> (Anti) 339]
                  remark #25447: Dependence found between following statements:  [337 -> (Flow) 337]
                  remark #25447: Dependence found between following statements:  [337 -> (Anti) 337]
                  remark #25447: Dependence found between following statements:  [339 -> (Flow) 339]
                  remark #25447: Dependence found between following statements:  [339 -> (Anti) 339]
                  remark #25447: Dependence found between following statements:  [339 -> (Anti) 337]
                  remark #25447: Dependence found between following statements:  [339 -> (Flow) 337]
                  remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[j*8+i] (337:5) and src_ptr[i*8+j] (339:5)
                  remark #25436: completely unrolled by 8  

                  LOOP BEGIN at transupp.c(336,3) inlined into transupp.c(848,5)
                     remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                     remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[j*8+i] (337:5) and src_ptr[i*8+j] (339:5)
                     remark #25436: completely unrolled by 4  
                  LOOP END

                  LOOP BEGIN at transupp.c(336,3) inlined into transupp.c(848,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(336,3) inlined into transupp.c(848,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(336,3) inlined into transupp.c(848,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(336,3) inlined into transupp.c(848,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(336,3) inlined into transupp.c(848,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(336,3) inlined into transupp.c(848,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(336,3) inlined into transupp.c(848,5)
                  LOOP END
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(377,3) inlined into transupp.c(845,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at transupp.c(381,5) inlined into transupp.c(845,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at transupp.c(398,7) inlined into transupp.c(845,5)
         remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

         LOOP BEGIN at transupp.c(404,4) inlined into transupp.c(845,5)
            remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
            remark #25452: Original Order found to be proper, but by a close margin
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between *dst_ptr (410:4) and *dst_ptr (416:4)

            LOOP BEGIN at transupp.c(407,6) inlined into transupp.c(845,5)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed OUTPUT dependence between *dst_ptr (410:4) and *dst_ptr (416:4)
               remark #25436: completely unrolled by 4  

               LOOP BEGIN at transupp.c(409,8) inlined into transupp.c(845,5)
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (410:4) and *(src_ptr+2) (411:4)
                  remark #25436: completely unrolled by 4  
               LOOP END

               LOOP BEGIN at transupp.c(409,8) inlined into transupp.c(845,5)
               LOOP END

               LOOP BEGIN at transupp.c(414,8) inlined into transupp.c(845,5)
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (415:4) and *(src_ptr+2) (416:4)
                  remark #25436: completely unrolled by 4  
               LOOP END

               LOOP BEGIN at transupp.c(409,8) inlined into transupp.c(845,5)
               LOOP END

               LOOP BEGIN at transupp.c(414,8) inlined into transupp.c(845,5)
               LOOP END

               LOOP BEGIN at transupp.c(409,8) inlined into transupp.c(845,5)
               LOOP END

               LOOP BEGIN at transupp.c(414,8) inlined into transupp.c(845,5)
               LOOP END
            LOOP END
         LOOP END

         LOOP BEGIN at transupp.c(421,4) inlined into transupp.c(845,5)
            remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
            remark #25452: Original Order found to be proper, but by a close margin
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between *dst_ptr (426:4) and *dst_ptr (428:4)

            LOOP BEGIN at transupp.c(424,6) inlined into transupp.c(845,5)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed OUTPUT dependence between *dst_ptr (426:4) and *dst_ptr (428:4)
               remark #25436: completely unrolled by 4  

               LOOP BEGIN at transupp.c(425,8) inlined into transupp.c(845,5)
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (426:4) and *src_ptr (426:4)
                  remark #25436: completely unrolled by 8  
               LOOP END

               LOOP BEGIN at transupp.c(425,8) inlined into transupp.c(845,5)
               LOOP END

               LOOP BEGIN at transupp.c(427,8) inlined into transupp.c(845,5)
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (428:4) and *src_ptr (428:4)
                  remark #25436: completely unrolled by 8  
               LOOP END

               LOOP BEGIN at transupp.c(425,8) inlined into transupp.c(845,5)
               LOOP END

               LOOP BEGIN at transupp.c(427,8) inlined into transupp.c(845,5)
               LOOP END

               LOOP BEGIN at transupp.c(425,8) inlined into transupp.c(845,5)
               LOOP END

               LOOP BEGIN at transupp.c(427,8) inlined into transupp.c(845,5)
               LOOP END
            LOOP END
         LOOP END

         LOOP BEGIN at transupp.c(436,4) inlined into transupp.c(845,5)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (440:9) and *(src_ptr+2) (441:9)

            LOOP BEGIN at transupp.c(439,6) inlined into transupp.c(845,5)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (440:9) and *(src_ptr+2) (441:9)
               remark #25438: unrolled without remainder by 2  
            LOOP END
         LOOP END

         LOOP BEGIN at transupp.c(445,4) inlined into transupp.c(845,5)
            remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
            remark #25452: Original Order found to be proper, but by a close margin
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between *dst_ptr (449:9) and *dst_ptr (449:9)

            LOOP BEGIN at transupp.c(448,6) inlined into transupp.c(845,5)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (449:9) and *src_ptr (449:9)
               remark #25438: unrolled without remainder by 2  
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(251,3) inlined into transupp.c(842,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at transupp.c(254,5) inlined into transupp.c(842,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at transupp.c(259,7) inlined into transupp.c(842,5)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at transupp.c(260,2) inlined into transupp.c(842,5)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at transupp.c(265,4) inlined into transupp.c(842,5)
               remark #15542: loop was not vectorized: inner loop was already vectorized

               LOOP BEGIN at transupp.c(271,8) inlined into transupp.c(842,5)
                  remark #15542: loop was not vectorized: inner loop was already vectorized

                  LOOP BEGIN at transupp.c(272,3) inlined into transupp.c(842,5)
                  <Multiversioned v1>
                     remark #25228: Loop multiversioned for Data Dependence
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15453: unmasked strided stores: 1 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 5 
                     remark #15477: vector cost: 2.750 
                     remark #15478: estimated potential speedup: 1.600 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at transupp.c(272,3) inlined into transupp.c(842,5)
                  <Multiversioned v2>
                     remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
                     remark #25436: completely unrolled by 8  
                  LOOP END

                  LOOP BEGIN at transupp.c(275,3) inlined into transupp.c(842,5)
                  <Multiversioned v1>
                     remark #25228: Loop multiversioned for Data Dependence
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15453: unmasked strided stores: 1 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 6 
                     remark #15477: vector cost: 2.870 
                     remark #15478: estimated potential speedup: 1.840 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at transupp.c(275,3) inlined into transupp.c(842,5)
                  <Multiversioned v2>
                     remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
                     remark #25436: completely unrolled by 8  
                  LOOP END
               LOOP END

               LOOP BEGIN at transupp.c(281,8) inlined into transupp.c(842,5)
                  remark #25445: Loop Interchange not done due to: Data Dependencies
                  remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
                  remark #25447: Dependence found between following statements:  [283 -> (Flow) 283]
                  remark #25447: Dependence found between following statements:  [283 -> (Anti) 283]
                  remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
                  remark #15542: loop was not vectorized: inner loop was already vectorized

                  LOOP BEGIN at transupp.c(282,3) inlined into transupp.c(842,5)
                  <Multiversioned v1>
                     remark #25228: Loop multiversioned for Data Dependence
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15453: unmasked strided stores: 1 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 5 
                     remark #15477: vector cost: 2.750 
                     remark #15478: estimated potential speedup: 1.600 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at transupp.c(282,3) inlined into transupp.c(842,5)
                  <Multiversioned v2>
                     remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
                     remark #25436: completely unrolled by 8  
                  LOOP END
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(481,3) inlined into transupp.c(839,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at transupp.c(485,5) inlined into transupp.c(839,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at transupp.c(490,7) inlined into transupp.c(839,5)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at transupp.c(491,2) inlined into transupp.c(839,5)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at transupp.c(496,4) inlined into transupp.c(839,5)
               remark #15542: loop was not vectorized: inner loop was already vectorized

               LOOP BEGIN at transupp.c(534,3) inlined into transupp.c(839,5)
                  remark #15542: loop was not vectorized: inner loop was already vectorized

                  LOOP BEGIN at transupp.c(535,5) inlined into transupp.c(839,5)
                  <Multiversioned v1>
                     remark #25228: Loop multiversioned for Data Dependence
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15453: unmasked strided stores: 1 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 5 
                     remark #15477: vector cost: 2.750 
                     remark #15478: estimated potential speedup: 1.600 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at transupp.c(535,5) inlined into transupp.c(839,5)
                  <Multiversioned v2>
                     remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
                     remark #25436: completely unrolled by 8  
                  LOOP END

                  LOOP BEGIN at transupp.c(538,5) inlined into transupp.c(839,5)
                  <Multiversioned v1>
                     remark #25228: Loop multiversioned for Data Dependence
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15453: unmasked strided stores: 1 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 6 
                     remark #15477: vector cost: 2.870 
                     remark #15478: estimated potential speedup: 1.840 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at transupp.c(538,5) inlined into transupp.c(839,5)
                  <Multiversioned v2>
                     remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
                     remark #25436: completely unrolled by 8  
                  LOOP END
               LOOP END

               LOOP BEGIN at transupp.c(544,3) inlined into transupp.c(839,5)
                  remark #25445: Loop Interchange not done due to: Data Dependencies
                  remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
                  remark #25447: Dependence found between following statements:  [546 -> (Flow) 546]
                  remark #25447: Dependence found between following statements:  [546 -> (Anti) 546]
                  remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
                  remark #15542: loop was not vectorized: inner loop was already vectorized

                  LOOP BEGIN at transupp.c(545,5) inlined into transupp.c(839,5)
                  <Multiversioned v1>
                     remark #25228: Loop multiversioned for Data Dependence
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15453: unmasked strided stores: 1 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 5 
                     remark #15477: vector cost: 2.750 
                     remark #15478: estimated potential speedup: 1.600 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at transupp.c(545,5) inlined into transupp.c(839,5)
                  <Multiversioned v2>
                     remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
                     remark #25436: completely unrolled by 8  
                  LOOP END
               LOOP END

               LOOP BEGIN at transupp.c(504,3) inlined into transupp.c(839,5)
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed OUTPUT dependence between dst_ptr[j*8+i] (506:7) and dst_ptr[j*8+i] (514:7)
                  remark #25436: completely unrolled by 4  

                  LOOP BEGIN at transupp.c(505,5) inlined into transupp.c(839,5)
                     remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                     remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[j*8+i] (506:7) and src_ptr[i*8+j] (508:7)
                     remark #25436: completely unrolled by 4  
                  LOOP END

                  LOOP BEGIN at transupp.c(505,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(511,5) inlined into transupp.c(839,5)
                     remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                     remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[j*8+i] (512:7) and src_ptr[i*8+j] (514:7)
                     remark #25436: completely unrolled by 4  
                  LOOP END

                  LOOP BEGIN at transupp.c(505,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(511,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(505,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(511,5) inlined into transupp.c(839,5)
                  LOOP END
               LOOP END

               LOOP BEGIN at transupp.c(520,3) inlined into transupp.c(839,5)
                  remark #25445: Loop Interchange not done due to: Data Dependencies
                  remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
                  remark #25447: Dependence found between following statements:  [522 -> (Flow) 524]
                  remark #25447: Dependence found between following statements:  [522 -> (Anti) 524]
                  remark #25447: Dependence found between following statements:  [522 -> (Flow) 522]
                  remark #25447: Dependence found between following statements:  [522 -> (Anti) 522]
                  remark #25447: Dependence found between following statements:  [524 -> (Flow) 524]
                  remark #25447: Dependence found between following statements:  [524 -> (Anti) 524]
                  remark #25447: Dependence found between following statements:  [524 -> (Anti) 522]
                  remark #25447: Dependence found between following statements:  [524 -> (Flow) 522]
                  remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[j*8+i] (522:7) and src_ptr[i*8+j] (524:7)
                  remark #25436: completely unrolled by 8  

                  LOOP BEGIN at transupp.c(521,5) inlined into transupp.c(839,5)
                     remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                     remark #15346: vector dependence: assumed FLOW dependence between dst_ptr[j*8+i] (522:7) and src_ptr[i*8+j] (524:7)
                     remark #25436: completely unrolled by 4  
                  LOOP END

                  LOOP BEGIN at transupp.c(521,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(521,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(521,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(521,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(521,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(521,5) inlined into transupp.c(839,5)
                  LOOP END

                  LOOP BEGIN at transupp.c(521,5) inlined into transupp.c(839,5)
                  LOOP END
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(202,3) inlined into transupp.c(836,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at transupp.c(204,5) inlined into transupp.c(836,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at transupp.c(209,7) inlined into transupp.c(836,5)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at transupp.c(210,2) inlined into transupp.c(836,5)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at transupp.c(215,4) inlined into transupp.c(836,5)
               remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
               remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 1 3 2 ) 
               remark #15542: loop was not vectorized: inner loop was already vectorized

               LOOP BEGIN at transupp.c(218,6) inlined into transupp.c(836,5)
                  remark #25445: Loop Interchange not done due to: Data Dependencies
                  remark #25446: Dependencies found between following statements:  [From_Line# -> (Dependency Type) To_Line#]
                  remark #25447: Dependence found between following statements:  [220 -> (Flow) 220]
                  remark #25447: Dependence found between following statements:  [220 -> (Anti) 220]
                  remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
                  remark #15542: loop was not vectorized: inner loop was already vectorized

                  LOOP BEGIN at transupp.c(219,8) inlined into transupp.c(836,5)
                  <Multiversioned v1>
                     remark #25228: Loop multiversioned for Data Dependence
                     remark #15300: LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15453: unmasked strided stores: 1 
                     remark #15475: --- begin vector cost summary ---
                     remark #15476: scalar cost: 5 
                     remark #15477: vector cost: 2.750 
                     remark #15478: estimated potential speedup: 1.600 
                     remark #15488: --- end vector cost summary ---
                  LOOP END

                  LOOP BEGIN at transupp.c(219,8) inlined into transupp.c(836,5)
                  <Multiversioned v2>
                     remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
                     remark #25436: completely unrolled by 8  
                  LOOP END
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(136,3) inlined into transupp.c(833,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at transupp.c(139,5) inlined into transupp.c(833,5)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

      LOOP BEGIN at transupp.c(156,7) inlined into transupp.c(833,5)
         remark #15523: loop was not vectorized: loop control variable offset_y was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at transupp.c(161,4) inlined into transupp.c(833,5)
            remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
            remark #25452: Original Order found to be proper, but by a close margin
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between *dst_ptr (168:4) and *dst_ptr (171:4)

            LOOP BEGIN at transupp.c(165,6) inlined into transupp.c(833,5)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed OUTPUT dependence between *dst_ptr (168:4) and *dst_ptr (171:4)
               remark #25436: completely unrolled by 4  

               LOOP BEGIN at transupp.c(167,8) inlined into transupp.c(833,5)
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (168:4) and *src_ptr (168:4)
                  remark #25436: completely unrolled by 8  
               LOOP END

               LOOP BEGIN at transupp.c(167,8) inlined into transupp.c(833,5)
               LOOP END

               LOOP BEGIN at transupp.c(170,8) inlined into transupp.c(833,5)
                  remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
                  remark #15346: vector dependence: assumed FLOW dependence between *dst_ptr (171:4) and *src_ptr (171:4)
                  remark #25436: completely unrolled by 8  
               LOOP END

               LOOP BEGIN at transupp.c(167,8) inlined into transupp.c(833,5)
               LOOP END

               LOOP BEGIN at transupp.c(170,8) inlined into transupp.c(833,5)
               LOOP END

               LOOP BEGIN at transupp.c(167,8) inlined into transupp.c(833,5)
               LOOP END

               LOOP BEGIN at transupp.c(170,8) inlined into transupp.c(833,5)
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at transupp.c(84,3) inlined into transupp.c(830,5)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at transupp.c(87,5) inlined into transupp.c(830,5)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

      LOOP BEGIN at transupp.c(92,7) inlined into transupp.c(830,5)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between *ptr1 (98:6) and *ptr2 (105:7)

         LOOP BEGIN at transupp.c(93,2) inlined into transupp.c(830,5)
            remark #15523: loop was not vectorized: loop control variable blk_x was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at transupp.c(97,4) inlined into transupp.c(830,5)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed ANTI dependence between *ptr1 (98:6) and *ptr2 (105:7)
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jcopy_markers_setup(j_decompress_ptr, JCOPY_OPTION)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at transupp.c(872,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: jcopy_markers_execute(j_decompress_ptr, j_compress_ptr, JCOPY_OPTION)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at transupp.c(896,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================
