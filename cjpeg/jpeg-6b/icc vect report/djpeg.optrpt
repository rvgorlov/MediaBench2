Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -vec_report -o djpeg.o -c

Begin optimization report for: main(int, char **)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at djpeg.c(591,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at djpeg.c(433,3)
   remark #15535: loop was not vectorized: loop contains switch statement. Consider using if-else statement.   [ djpeg.c(550,5) ]
LOOP END
===========================================================================

Begin optimization report for: parse_switches(j_decompress_ptr, int, char **, int, boolean)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at djpeg.c(184,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END
===========================================================================

Begin optimization report for: print_text_marker(j_decompress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at djpeg.c(389,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between cinfo->src (358:38) and call:fprintf(FILE *__restrict__, const char *__restrict__, ...) (407:2)
LOOP END
===========================================================================
