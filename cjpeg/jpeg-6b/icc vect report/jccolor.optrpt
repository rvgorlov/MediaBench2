Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -vec_report -o jccolor.o -c

Begin optimization report for: rgb_ycc_start(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccolor.c(97,3)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jccolor.c(97,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 8 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 32 
   remark #15477: vector cost: 20.000 
   remark #15478: estimated potential speedup: 1.580 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=128
LOOP END

LOOP BEGIN at jccolor.c(97,3)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: rgb_ycc_convert(j_compress_ptr, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccolor.c(142,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *input_buf (143:5) and outptr2[col] (167:7)

   LOOP BEGIN at jccolor.c(148,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *inptr (149:7) and outptr2[col] (167:7)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: rgb_gray_convert(j_compress_ptr, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccolor.c(198,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *input_buf (199:5) and outptr[col] (208:7)

   LOOP BEGIN at jccolor.c(202,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *inptr (203:7) and outptr[col] (208:7)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: cmyk_ycck_convert(j_compress_ptr, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccolor.c(237,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *input_buf (238:5) and outptr2[col] (265:7)

   LOOP BEGIN at jccolor.c(244,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *inptr (245:7) and outptr2[col] (265:7)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: grayscale_convert(j_compress_ptr, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccolor.c(290,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jccolor.c(294,5)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at jccolor.c(294,5)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.120 
      remark #15478: estimated potential speedup: 1.710 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at jccolor.c(294,5)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at jccolor.c(294,5)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at jccolor.c(294,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: null_convert(j_compress_ptr, JSAMPARRAY, JSAMPIMAGE, JDIMENSION, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccolor.c(320,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 3 1 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jccolor.c(322,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at jccolor.c(325,7)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at jccolor.c(325,7)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15452: unmasked strided loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 5 
         remark #15477: vector cost: 2.120 
         remark #15478: estimated potential speedup: 2.060 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at jccolor.c(325,7)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at jccolor.c(325,7)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at jccolor.c(325,7)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================
