Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -vec_report -o jcmarker.o -c

Begin optimization report for: write_frame_header(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcmarker.c(504,3)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jcmarker.c(518,5)
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 20 
   remark #15477: vector cost: 9.430 
   remark #15478: estimated potential speedup: 2.020 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcmarker.c(518,5)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at jcmarker.c(518,5)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: emit_dqt(j_compress_ptr, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcmarker.c(156,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 19 
   remark #15477: vector cost: 2.560 
   remark #15478: estimated potential speedup: 7.110 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcmarker.c(168,5)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 171 hoisted out of this loop
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between qtbl->quantval[jpeg_natural_order[i]] (170:27) and *dest->next_output_byte (113:5)
LOOP END

LOOP BEGIN at jcmarker.c(168,5)
<Predicate Optimized v2>
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between qtbl->quantval[jpeg_natural_order[i]] (170:27) and *dest->next_output_byte (113:5)
LOOP END
===========================================================================

Begin optimization report for: emit_sof(j_compress_ptr, JPEG_MARKER)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcmarker.c(298,3)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END
===========================================================================

Begin optimization report for: write_scan_header(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcmarker.c(567,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jcmarker.c(320,3) inlined into jcmarker.c(593,3)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END
===========================================================================

Begin optimization report for: emit_dht(j_compress_ptr, int, boolean)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcmarker.c(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 0.820 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at jcmarker.c(210,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between htbl->bits[i] (211:7) and dest->next_output_byte (113:5)
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at jcmarker.c(213,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between htbl->huffval[i] (214:7) and dest->free_in_buffer (114:9)
   remark #25015: Estimate of max trip count of loop=256
LOOP END
===========================================================================

Begin optimization report for: write_tables_only(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcmarker.c(622,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25436: completely unrolled by 4  
LOOP END

LOOP BEGIN at jcmarker.c(628,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25436: completely unrolled by 4  
LOOP END
===========================================================================
