Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -vec_report -o jdsample.o -c

Begin optimization report for: sep_upsample(j_decompress_ptr, JSAMPIMAGE, JDIMENSION *, JDIMENSION, JSAMPARRAY, JDIMENSION *, JDIMENSION)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdsample.c(102,5)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END
===========================================================================

Begin optimization report for: int_upsample(j_decompress_ptr, jpeg_component_info *, JSAMPARRAY, JSAMPARRAY *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdsample.c(205,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jdsample.c(210,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at jdsample.c(212,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=31
      LOOP END

      LOOP BEGIN at jdsample.c(212,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 0.340 
         remark #15478: estimated potential speedup: 3.680 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at jdsample.c(212,7)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at jdsample.c(212,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: h2v1_upsample(j_decompress_ptr, jpeg_component_info *, JSAMPARRAY, JSAMPARRAY *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdsample.c(242,3)
   remark #15523: loop was not vectorized: loop control variable inrow was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jdsample.c(246,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *inptr (247:7) and *outptr (249:8)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at jdsample.c(246,5)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: h2v2_upsample(j_decompress_ptr, jpeg_component_info *, JSAMPARRAY, JSAMPARRAY *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdsample.c(271,3)
   remark #15523: loop was not vectorized: loop control variable inrow was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jdsample.c(275,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *inptr (276:7) and *outptr (278:8)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at jdsample.c(275,5)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: h2v1_fancy_upsample(j_decompress_ptr, jpeg_component_info *, JSAMPARRAY, JSAMPARRAY *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdsample.c(313,3)
   remark #15523: loop was not vectorized: loop control variable inrow was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jdsample.c(321,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *inptr (323:7) and *outptr (325:8)
      remark #25439: unrolled with remainder by 2  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END

   LOOP BEGIN at jdsample.c(321,5)
   <Remainder>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: h2v2_fancy_upsample(j_decompress_ptr, jpeg_component_info *, JSAMPARRAY, JSAMPARRAY *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdsample.c(359,3)
   remark #15523: loop was not vectorized: loop control variable inrow was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jdsample.c(360,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between input_data[inrow] (362:7) and *(outptr+1) (387:8)

      LOOP BEGIN at jdsample.c(376,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between *inptr0 (379:2) and *outptr (381:3)
         remark #25439: unrolled with remainder by 2  
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END

      LOOP BEGIN at jdsample.c(376,7)
      <Remainder>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jinit_upsampler(j_decompress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdsample.c(426,3)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================
