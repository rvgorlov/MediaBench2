Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -vec_report -o jccoefct.o -c

Begin optimization report for: compress_data(j_compress_ptr, JSAMPIMAGE)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccoefct.c(154,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at jccoefct.c(156,5)
      remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

      LOOP BEGIN at jccoefct.c(168,7)
         remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at jccoefct.c(174,2)
            remark #15523: loop was not vectorized: loop control variable yindex was found, but loop iteration count cannot be computed before executing the loop

            LOOP BEGIN at jccoefct.c(193,6)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed FLOW dependence between coef->MCU_buffer[blkn+bi][0] (194:8) and coef->MCU_buffer[blkn-1][0] (194:8)
               remark #25015: Estimate of max trip count of loop=10
            LOOP END

            LOOP BEGIN at jccoefct.c(185,8)
               remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
               remark #15346: vector dependence: assumed FLOW dependence between coef->MCU_buffer[blkn+bi][0] (186:3) and coef->MCU_buffer[blkn+bi-1][0] (186:3)
               remark #25015: Estimate of max trip count of loop=10
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: compress_first_pass(j_compress_ptr, JSAMPIMAGE)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccoefct.c(256,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at jccoefct.c(280,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

      LOOP BEGIN at jccoefct.c(291,2)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 2 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 0.790 
         remark #15488: --- end vector cost summary ---
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at jccoefct.c(291,2)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at jccoefct.c(304,7)
      remark #15523: loop was not vectorized: loop control variable block_row was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at jccoefct.c(310,2)
         remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
         remark #25452: Original Order found to be proper, but by a close margin
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between lastblockrow[h_samp_factor-1][0] (311:4) and thisblockrow[bi][0] (313:6)

         LOOP BEGIN at jccoefct.c(312,4)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 2 
            remark #15477: vector cost: 2.500 
            remark #15478: estimated potential speedup: 0.790 
            remark #15488: --- end vector cost summary ---
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at jccoefct.c(312,4)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at jccoefct.c(355,3) inlined into jccoefct.c(326,10)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jccoefct.c(364,3) inlined into jccoefct.c(326,10)
   remark #15523: loop was not vectorized: loop control variable yoffset was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jccoefct.c(366,5) inlined into jccoefct.c(326,10)
      remark #15523: loop was not vectorized: loop control variable MCU_col_num was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at jccoefct.c(370,7) inlined into jccoefct.c(326,10)
         remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
         remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 1 3 ) 
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between cinfo->coef->MCU_buffer[blkn] (376:6) and cinfo->coef->MCU_buffer[blkn] (376:6)
         remark #25015: Estimate of max trip count of loop=4

         LOOP BEGIN at jccoefct.c(373,2) inlined into jccoefct.c(326,10)
            remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
            remark #25452: Original Order found to be proper, but by a close margin
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between cinfo->coef->MCU_buffer[blkn] (376:6) and cinfo->coef->MCU_buffer[blkn] (376:6)

            LOOP BEGIN at jccoefct.c(375,4) inlined into jccoefct.c(326,10)
               remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
               remark #15451: unmasked unaligned unit stride stores: 1 
               remark #15475: --- begin vector cost summary ---
               remark #15476: scalar cost: 4 
               remark #15477: vector cost: 5.500 
               remark #15478: estimated potential speedup: 0.630 
               remark #15488: --- end vector cost summary ---
               remark #25439: unrolled with remainder by 2  
               remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
               remark #25015: Estimate of max trip count of loop=10
            LOOP END

            LOOP BEGIN at jccoefct.c(375,4) inlined into jccoefct.c(326,10)
            <Remainder>
               remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
               remark #25015: Estimate of max trip count of loop=10
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: compress_output(j_compress_ptr, JSAMPIMAGE)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccoefct.c(355,3)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jccoefct.c(364,3)
   remark #15523: loop was not vectorized: loop control variable yoffset was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jccoefct.c(366,5)
      remark #15523: loop was not vectorized: loop control variable MCU_col_num was found, but loop iteration count cannot be computed before executing the loop

      LOOP BEGIN at jccoefct.c(370,7)
         remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
         remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 1 3 ) 
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed OUTPUT dependence between coef->MCU_buffer[blkn] (376:6) and coef->MCU_buffer[blkn] (376:6)
         remark #25015: Estimate of max trip count of loop=4

         LOOP BEGIN at jccoefct.c(373,2)
            remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
            remark #25452: Original Order found to be proper, but by a close margin
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed OUTPUT dependence between coef->MCU_buffer[blkn] (376:6) and coef->MCU_buffer[blkn] (376:6)

            LOOP BEGIN at jccoefct.c(375,4)
               remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
               remark #15451: unmasked unaligned unit stride stores: 1 
               remark #15475: --- begin vector cost summary ---
               remark #15476: scalar cost: 4 
               remark #15477: vector cost: 5.500 
               remark #15478: estimated potential speedup: 0.630 
               remark #15488: --- end vector cost summary ---
               remark #25439: unrolled with remainder by 2  
               remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
               remark #25015: Estimate of max trip count of loop=10
            LOOP END

            LOOP BEGIN at jccoefct.c(375,4)
            <Remainder>
               remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
               remark #25015: Estimate of max trip count of loop=10
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jinit_c_coef_controller(j_compress_ptr, boolean)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jccoefct.c(423,5)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jccoefct.c(444,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 5.500 
   remark #15478: estimated potential speedup: 0.650 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 10  
LOOP END
===========================================================================
