Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -vec_report -o jquant1.o -c

Begin optimization report for: color_quantize(j_decompress_ptr, JSAMPARRAY, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jquant1.c(472,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jquant1.c(475,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25452: Original Order found to be proper, but by a close margin
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at jquant1.c(477,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=7
      LOOP END

      LOOP BEGIN at jquant1.c(477,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 8 
         remark #15477: vector cost: 5.620 
         remark #15478: estimated potential speedup: 1.370 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at jquant1.c(477,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: color_quantize3(j_decompress_ptr, JSAMPARRAY, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jquant1.c(501,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between input_buf[row] (502:5) and *ptrout (508:8)

   LOOP BEGIN at jquant1.c(504,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *ptrin (507:7) and *ptrout (508:8)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: quantize_ord_dither(j_decompress_ptr, JSAMPARRAY, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jquant1.c(531,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

   LOOP BEGIN at jquant1.c(536,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between input_buf[row] (537:7) and *output_ptr (551:3)
      remark #25015: Estimate of max trip count of loop=4

      LOOP BEGIN at jquant1.c(543,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between *output_ptr (551:3) and *input_ptr (551:3)
         remark #25439: unrolled with remainder by 16  
      LOOP END

      LOOP BEGIN at jquant1.c(543,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: quantize3_ord_dither(j_decompress_ptr, JSAMPARRAY, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jquant1.c(584,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between input_buf[row] (586:5) and *output_ptr (600:8)

   LOOP BEGIN at jquant1.c(593,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *input_ptr (598:7) and *output_ptr (600:8)
      remark #25439: unrolled with remainder by 10  
   LOOP END

   LOOP BEGIN at jquant1.c(593,5)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: quantize_fs_dither(j_decompress_ptr, JSAMPARRAY, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jquant1.c(636,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

   LOOP BEGIN at jquant1.c(640,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between input_buf[row] (641:7) and *output_ptr (681:3)
      remark #25015: Estimate of max trip count of loop=4

      LOOP BEGIN at jquant1.c(663,7)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed ANTI dependence between *(errorptr+dir*2) (678:2) and *errorptr (693:2)
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: start_pass_1_quant(j_decompress_ptr, boolean)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jquant1.c(360,3) inlined into jquant1.c(770,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jquant1.c(374,5) inlined into jquant1.c(770,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between val (378:7) and val (376:38)

      LOOP BEGIN at jquant1.c(375,7) inlined into jquant1.c(770,7)
         remark #15523: loop was not vectorized: loop control variable val was found, but loop iteration count cannot be computed before executing the loop
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END

   LOOP BEGIN at jquant1.c(382,7) inlined into jquant1.c(770,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between indexptr[j] (383:2) and *(indexptr+255) (384:2)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at jquant1.c(382,7) inlined into jquant1.c(770,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at jquant1.c(438,3) inlined into jquant1.c(773,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jquant1.c(441,5) inlined into jquant1.c(773,7)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jquant1.c(442,7) ]
      remark #25015: Estimate of max trip count of loop=4
   LOOP END

   LOOP BEGIN at jquant1.c(411,3) inlined into jquant1.c(773,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 52 
      remark #15477: vector cost: 103.000 
      remark #15478: estimated potential speedup: 0.500 
      remark #15482: vectorized math library calls: 2 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at jquant1.c(412,5) inlined into jquant1.c(773,7)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 52 
         remark #15477: vector cost: 100.500 
         remark #15478: estimated potential speedup: 0.510 
         remark #15482: vectorized math library calls: 2 
         remark #15487: type converts: 1 
         remark #15488: --- end vector cost summary ---
         remark #25436: completely unrolled by 16  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at jquant1.c(729,3) inlined into jquant1.c(780,7)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jquant1.c(783,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END
===========================================================================

Begin optimization report for: jinit_1pass_quantizer(j_decompress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jquant1.c(200,3) inlined into jquant1.c(843,3)
   remark #15523: loop was not vectorized: loop control variable iroot was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jquant1.c(204,5) inlined into jquant1.c(843,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.220 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at jquant1.c(204,5) inlined into jquant1.c(843,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at jquant1.c(215,3) inlined into jquant1.c(843,3)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=3
LOOP END

LOOP BEGIN at jquant1.c(215,3) inlined into jquant1.c(843,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.830 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jquant1.c(215,3) inlined into jquant1.c(843,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at jquant1.c(234,7) inlined into jquant1.c(843,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at jquant1.c(227,5) inlined into jquant1.c(843,3)
      remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jquant1.c(236,7) ]
      remark #25015: Estimate of max trip count of loop=3
   LOOP END
LOOP END

LOOP BEGIN at jquant1.c(303,3) inlined into jquant1.c(843,3)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jquant1.c(307,5) inlined into jquant1.c(843,3)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 3 ) --> ( 2 1 3 ) 
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between colormap[i][ptr+k] (314:4) and colormap[i] (314:4)

      LOOP BEGIN at jquant1.c(311,7) inlined into jquant1.c(843,3)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between colormap[i][ptr+k] (314:4) and colormap[i] (314:4)

         LOOP BEGIN at jquant1.c(313,2) inlined into jquant1.c(843,3)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between colormap[i][ptr+k] (314:4) and colormap[i] (314:4)
            remark #25439: unrolled with remainder by 2  
         LOOP END

         LOOP BEGIN at jquant1.c(313,2) inlined into jquant1.c(843,3)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at jquant1.c(360,3) inlined into jquant1.c(844,3)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jquant1.c(374,5) inlined into jquant1.c(844,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between val (378:7) and val (376:38)

      LOOP BEGIN at jquant1.c(375,7) inlined into jquant1.c(844,3)
         remark #15523: loop was not vectorized: loop control variable val was found, but loop iteration count cannot be computed before executing the loop
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      LOOP END
   LOOP END

   LOOP BEGIN at jquant1.c(382,7) inlined into jquant1.c(844,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between indexptr[j] (383:2) and *(indexptr+255) (384:2)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at jquant1.c(382,7) inlined into jquant1.c(844,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at jquant1.c(729,3) inlined into jquant1.c(853,5)
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END
===========================================================================
