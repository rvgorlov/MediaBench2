Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -c -o jdhuff.o

Begin optimization report for: start_pass_huff_decoder(j_decompress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdhuff.c(100,3)
   remark #15523: loop was not vectorized: loop control variable ci was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at jdhuff.c(115,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 4 
   remark #15451: unmasked unaligned unit stride stores: 6 
   remark #15462: unmasked indexed (or gather) loads: 7 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 50 
   remark #15477: vector cost: 44.250 
   remark #15478: estimated potential speedup: 1.030 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jdhuff.c(115,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=10
LOOP END
===========================================================================

Begin optimization report for: jpeg_make_d_derived_tbl(j_decompress_ptr, boolean, int, d_derived_tbl **)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdhuff.c(183,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jdhuff.c(187,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 3 
      remark #15477: vector cost: 0.400 
      remark #15478: estimated potential speedup: 6.210 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=8
   LOOP END

   LOOP BEGIN at jdhuff.c(187,5)
   <Remainder loop for vectorization>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      remark #25015: Estimate of max trip count of loop=257
   LOOP END
LOOP END

LOOP BEGIN at jdhuff.c(199,3)
   remark #15523: loop was not vectorized: loop control variable si was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at jdhuff.c(200,5)
      remark #15523: loop was not vectorized: loop control variable p was found, but loop iteration count cannot be computed before executing the loop
      remark #25478: While Loop Unrolled by 2  
   LOOP END
LOOP END

LOOP BEGIN at jdhuff.c(216,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between p (222:7) and p (221:7)
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at jdhuff.c(240,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jdhuff.c(241,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at jdhuff.c(245,7)
      <Peeled loop for vectorization, Distributed chunk1>
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at jdhuff.c(245,7)
      <Distributed chunk1>
         remark #25426: Loop Distributed (2 way) 
         remark #15301: PARTIAL LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 2 
         remark #15477: vector cost: 0.750 
         remark #15478: estimated potential speedup: 2.430 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at jdhuff.c(245,7)
      <Remainder loop for vectorization, Distributed chunk1>
         remark #25015: Estimate of max trip count of loop=256
      LOOP END

      LOOP BEGIN at jdhuff.c(245,7)
      <Distributed chunk2>
         remark #15301: PARTIAL LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 0.370 
         remark #15478: estimated potential speedup: 9.840 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=16
      LOOP END

      LOOP BEGIN at jdhuff.c(245,7)
      <Remainder loop for vectorization, Distributed chunk2>
         remark #25015: Estimate of max trip count of loop=256
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at jdhuff.c(260,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=256
LOOP END

LOOP BEGIN at jdhuff.c(260,5)
<Remainder>
   remark #25015: Estimate of max trip count of loop=256
LOOP END
===========================================================================

Begin optimization report for: jpeg_huff_decode(bitread_working_state *, bit_buf_type, int, d_derived_tbl *, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(408,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(416,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END


Non-optimizable loops:


LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(408,3)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(414,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ jdhuff.c(307,5) ]

   LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(416,5)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: decode_mcu(j_decompress_ptr, JBLOCKROW *)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdhuff.c(483,3) inlined into jdhuff.c(527,13)
   remark #25408: memset generated
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=4

   LOOP BEGIN at jdhuff.c(483,3) inlined into jdhuff.c(527,13)
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 1.250 
      remark #15478: estimated potential speedup: 1.450 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at jdhuff.c(483,3) inlined into jdhuff.c(527,13)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=24
   LOOP END
LOOP END

LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(551,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(414,3) inlined into jdhuff.c(551,7)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(553,2)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(599,4)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(414,3) inlined into jdhuff.c(599,4)
   remark #15523: loop was not vectorized: loop control variable l was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(606,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(572,4)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(572,4)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(321,7) inlined into jdhuff.c(579,6)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at jdhuff.c(620,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 2.000 
   remark #15488: --- end vector cost summary ---
LOOP END


Non-optimizable loops:


LOOP BEGIN at jdhuff.c(542,5)
   remark #15533: loop was not vectorized: loop exceeds complexity limits. Consider overriding limits (-override-limits) or using simd directive.

   LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(551,7)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(553,2)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   LOOP END

   LOOP BEGIN at jdhuff.c(598,2)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ jdhuff.c(307,5) ]

      LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(599,4)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(606,6)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END

   LOOP BEGIN at jdhuff.c(571,2)
      remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ jdhuff.c(307,5) ]

      LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(572,4)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END

      LOOP BEGIN at jdhuff.c(414,3) inlined into jdhuff.c(572,4)
         remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ jdhuff.c(307,5) ]

         LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(572,4)
            remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
         LOOP END
      LOOP END

      LOOP BEGIN at jdhuff.c(307,5) inlined into jdhuff.c(579,6)
         remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jpeg_fill_bit_buffer(bitread_working_state *, bit_buf_type, int, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdhuff.c(307,5)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ jdhuff.c(313,11) ]

   LOOP BEGIN at jdhuff.c(321,7)
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jinit_huff_decoder(j_decompress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdhuff.c(648,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 6.000 
   remark #15478: estimated potential speedup: 0.530 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 4  
LOOP END
===========================================================================
