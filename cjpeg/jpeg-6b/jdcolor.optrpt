Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -c -o jdcolor.o

Begin optimization report for: ycc_rgb_convert(j_decompress_ptr, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdcolor.c(138,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *input_buf (139:5) and *(outptr+2) (153:7)

   LOOP BEGIN at jdcolor.c(144,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between inptr0[col] (145:7) and *(outptr+2) (153:7)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: null_convert(j_decompress_ptr, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdcolor.c(179,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jdcolor.c(180,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at jdcolor.c(183,7)
      <Peeled loop for vectorization, Multiversioned v1>
         remark #25015: Estimate of max trip count of loop=15
      LOOP END

      LOOP BEGIN at jdcolor.c(183,7)
      <Multiversioned v1>
         remark #25228: Loop multiversioned for Data Dependence
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 2.250 
         remark #15478: estimated potential speedup: 1.270 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at jdcolor.c(183,7)
      <Remainder loop for vectorization, Multiversioned v1>
      LOOP END

      LOOP BEGIN at jdcolor.c(183,7)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at jdcolor.c(183,7)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: gray_rgb_convert(j_decompress_ptr, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdcolor.c(225,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *input_buf (226:5) and *outptr (230:7)

   LOOP BEGIN at jdcolor.c(228,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between inptr[col] (230:45) and *outptr (230:7)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at jdcolor.c(228,5)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: ycck_cmyk_convert(j_decompress_ptr, JSAMPIMAGE, JDIMENSION, JSAMPARRAY, int)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdcolor.c(263,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *input_buf (264:5) and *(outptr+3) (281:7)

   LOOP BEGIN at jdcolor.c(270,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between inptr0[col] (271:7) and *(outptr+3) (281:7)
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jinit_color_deconverter(j_decompress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jdcolor.c(352,7)
   remark #15300: LOOP WAS VECTORIZED
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 2.810 
   remark #15478: estimated potential speedup: 1.060 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jdcolor.c(352,7)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at jdcolor.c(90,3) inlined into jdcolor.c(362,7)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 4 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 20 
   remark #15477: vector cost: 50.000 
   remark #15478: estimated potential speedup: 0.390 
   remark #15488: --- end vector cost summary ---
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at jdcolor.c(90,3) inlined into jdcolor.c(362,7)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at jdcolor.c(90,3) inlined into jdcolor.c(375,7)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 4 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 20 
   remark #15477: vector cost: 50.000 
   remark #15478: estimated potential speedup: 0.390 
   remark #15488: --- end vector cost summary ---
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at jdcolor.c(90,3) inlined into jdcolor.c(375,7)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25438: unrolled without remainder by 2  
LOOP END
===========================================================================
