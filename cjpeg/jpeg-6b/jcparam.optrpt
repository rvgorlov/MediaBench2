Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -I. -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -c -o jcparam.o

Begin optimization report for: jpeg_add_quant_table(j_compress_ptr, int, const unsigned int *, int, boolean)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcparam.c(48,3)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 53 hoisted out of this loop
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 46 
   remark #15477: vector cost: 78.000 
   remark #15478: estimated potential speedup: 0.580 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(48,3)
<Predicate Optimized v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 42 
   remark #15477: vector cost: 75.500 
   remark #15478: estimated potential speedup: 0.550 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: jpeg_set_linear_quality(j_compress_ptr, int, boolean)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(98,3)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 53 hoisted out of this loop
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 46 
   remark #15477: vector cost: 77.000 
   remark #15478: estimated potential speedup: 0.590 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(98,3)
<Predicate Optimized v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 42 
   remark #15477: vector cost: 74.500 
   remark #15478: estimated potential speedup: 0.560 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(100,3)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 53 hoisted out of this loop
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 46 
   remark #15477: vector cost: 77.000 
   remark #15478: estimated potential speedup: 0.590 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(100,3)
<Predicate Optimized v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 42 
   remark #15477: vector cost: 74.500 
   remark #15478: estimated potential speedup: 0.560 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: jpeg_set_quality(j_compress_ptr, int, boolean)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(143,3)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 53 hoisted out of this loop
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 46 
   remark #15477: vector cost: 77.000 
   remark #15478: estimated potential speedup: 0.590 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(143,3)
<Predicate Optimized v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 42 
   remark #15477: vector cost: 74.500 
   remark #15478: estimated potential speedup: 0.560 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(143,3)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 53 hoisted out of this loop
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 46 
   remark #15477: vector cost: 77.000 
   remark #15478: estimated potential speedup: 0.590 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(143,3)
<Predicate Optimized v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 42 
   remark #15477: vector cost: 74.500 
   remark #15478: estimated potential speedup: 0.560 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END
===========================================================================

Begin optimization report for: jpeg_simple_progression(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcparam.c(517,5) inlined into jcparam.c(579,15)
   remark #15315: loop was not vectorized: estimated number of iterations (4) is insufficient for vectorization
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcparam.c(517,5) inlined into jcparam.c(579,15)
<Remainder>
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(579,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at jcparam.c(499,5) inlined into jcparam.c(579,15)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(579,15)
<Remainder>
LOOP END

LOOP BEGIN at jcparam.c(481,3) inlined into jcparam.c(581,15)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(481,3) inlined into jcparam.c(583,15)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(481,3) inlined into jcparam.c(584,15)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(481,3) inlined into jcparam.c(586,15)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(481,3) inlined into jcparam.c(588,15)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(517,5) inlined into jcparam.c(590,15)
   remark #15315: loop was not vectorized: estimated number of iterations (4) is insufficient for vectorization
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcparam.c(517,5) inlined into jcparam.c(590,15)
<Remainder>
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(590,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at jcparam.c(499,5) inlined into jcparam.c(590,15)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(590,15)
<Remainder>
LOOP END

LOOP BEGIN at jcparam.c(481,3) inlined into jcparam.c(592,15)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(481,3) inlined into jcparam.c(593,15)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(481,3) inlined into jcparam.c(595,15)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.770 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(517,5) inlined into jcparam.c(599,15)
   remark #15315: loop was not vectorized: estimated number of iterations (4) is insufficient for vectorization
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcparam.c(517,5) inlined into jcparam.c(599,15)
<Remainder>
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(599,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at jcparam.c(499,5) inlined into jcparam.c(599,15)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(599,15)
<Remainder>
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(600,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at jcparam.c(499,5) inlined into jcparam.c(600,15)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(600,15)
<Remainder>
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(601,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at jcparam.c(499,5) inlined into jcparam.c(601,15)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(601,15)
<Remainder>
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(603,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at jcparam.c(499,5) inlined into jcparam.c(603,15)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(603,15)
<Remainder>
LOOP END

LOOP BEGIN at jcparam.c(517,5) inlined into jcparam.c(605,15)
   remark #15315: loop was not vectorized: estimated number of iterations (4) is insufficient for vectorization
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.250 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcparam.c(517,5) inlined into jcparam.c(605,15)
<Remainder>
   remark #25015: Estimate of max trip count of loop=4
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(605,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at jcparam.c(499,5) inlined into jcparam.c(605,15)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(605,15)
<Remainder>
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(606,15)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25439: unrolled with remainder by 2  

   LOOP BEGIN at jcparam.c(499,5) inlined into jcparam.c(606,15)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.770 
      remark #15488: --- end vector cost summary ---
   LOOP END
LOOP END

LOOP BEGIN at jcparam.c(496,3) inlined into jcparam.c(606,15)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: jpeg_set_colorspace(j_compress_ptr, J_COLOR_SPACE)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcparam.c(452,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(452,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(453,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.250 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(453,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(454,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.250 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(454,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(455,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(455,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(444,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(444,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(445,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(445,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(446,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(446,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(447,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(447,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(437,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(437,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(438,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.250 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(438,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(439,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.250 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(439,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(428,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(428,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(429,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(429,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(430,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(430,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(423,5)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.530 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(423,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at jcparam.c(462,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at jcparam.c(463,7)
      remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 1.530 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at jcparam.c(463,7)
   <Remainder loop for vectorization>
      remark #25436: completely unrolled by 1  
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: jpeg_set_defaults(j_compress_ptr)

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(289,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 46 
   remark #15477: vector cost: 67.500 
   remark #15478: estimated potential speedup: 0.680 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(48,3) inlined into jcparam.c(289,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 46 
   remark #15477: vector cost: 67.500 
   remark #15478: estimated potential speedup: 0.680 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(169,3) inlined into jcparam.c(291,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 0.820 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at jcparam.c(169,3) inlined into jcparam.c(291,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 0.820 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at jcparam.c(169,3) inlined into jcparam.c(291,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 0.820 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at jcparam.c(169,3) inlined into jcparam.c(291,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 0.820 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 16  
LOOP END

LOOP BEGIN at jcparam.c(294,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 3 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 0.930 
   remark #15478: estimated potential speedup: 4.000 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at jcparam.c(321,3)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.250 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at jcparam.c(321,3)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END
===========================================================================
