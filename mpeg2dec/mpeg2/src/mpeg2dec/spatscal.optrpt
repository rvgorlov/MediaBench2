Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -c -o spatscal.o

Begin optimization report for: Spatial_Prediction()

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at spatscal.c(98,3) inlined into spatscal.c(29,5)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at spatscal.c(99,6) inlined into spatscal.c(29,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END

   LOOP BEGIN at spatscal.c(103,2) inlined into spatscal.c(29,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(98,3) inlined into spatscal.c(31,5)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at spatscal.c(99,6) inlined into spatscal.c(31,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END

   LOOP BEGIN at spatscal.c(103,2) inlined into spatscal.c(31,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(98,3) inlined into spatscal.c(33,5)
   remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at spatscal.c(99,6) inlined into spatscal.c(33,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END

   LOOP BEGIN at spatscal.c(103,2) inlined into spatscal.c(33,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(129,3) inlined into spatscal.c(38,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at spatscal.c(130,5) inlined into spatscal.c(38,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(143,5) inlined into spatscal.c(38,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between call:_IO_getc(_IO_FILE *) (145:32) and call:_IO_getc(_IO_FILE *) (145:32)

   LOOP BEGIN at spatscal.c(144,7) inlined into spatscal.c(38,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(129,3) inlined into spatscal.c(40,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at spatscal.c(130,5) inlined into spatscal.c(40,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(143,5) inlined into spatscal.c(40,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between call:_IO_getc(_IO_FILE *) (145:32) and call:_IO_getc(_IO_FILE *) (145:32)

   LOOP BEGIN at spatscal.c(144,7) inlined into spatscal.c(40,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(129,3) inlined into spatscal.c(42,5)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification

   LOOP BEGIN at spatscal.c(130,5) inlined into spatscal.c(42,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(143,5) inlined into spatscal.c(42,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between call:_IO_getc(_IO_FILE *) (145:32) and call:_IO_getc(_IO_FILE *) (145:32)

   LOOP BEGIN at spatscal.c(144,7) inlined into spatscal.c(42,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: Make_Spatial_Prediction_Frame()

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at spatscal.c(288,3) inlined into spatscal.c(169,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(169,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(169,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 3.730 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(169,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(169,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(255,3) inlined into spatscal.c(176,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(176,7)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(176,7)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 0.560 
      remark #15478: estimated potential speedup: 6.410 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(176,7)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(176,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(176,7)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at spatscal.c(269,7) inlined into spatscal.c(176,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between p0m1[i] (271:9) and p0[i] (272:9)
      remark #25439: unrolled with remainder by 16  
   LOOP END

   LOOP BEGIN at spatscal.c(269,7) inlined into spatscal.c(176,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(288,3) inlined into spatscal.c(177,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(177,7)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(177,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 3.730 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(177,7)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(177,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(255,3) inlined into spatscal.c(181,7)
   remark #25260: Invariant Condition eliminated(Proven False) at line 258
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(181,7)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(181,7)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 0.560 
      remark #15478: estimated potential speedup: 6.410 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(181,7)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(181,7)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(181,7)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at spatscal.c(269,7) inlined into spatscal.c(181,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between p0m1[i] (271:9) and p0[i] (272:9)
      remark #25439: unrolled with remainder by 16  
   LOOP END

   LOOP BEGIN at spatscal.c(269,7) inlined into spatscal.c(181,7)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(288,3) inlined into spatscal.c(182,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(182,7)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(182,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 3.730 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(182,7)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(182,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(255,3) inlined into spatscal.c(188,5)
   remark #25260: Invariant Condition eliminated(Proven False) at line 258
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(188,5)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(188,5)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 0.560 
      remark #15478: estimated potential speedup: 6.410 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(188,5)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(188,5)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(188,5)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at spatscal.c(269,7) inlined into spatscal.c(188,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between p0m1[i] (271:9) and p0[i] (272:9)
      remark #25439: unrolled with remainder by 16  
   LOOP END

   LOOP BEGIN at spatscal.c(269,7) inlined into spatscal.c(188,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(255,3) inlined into spatscal.c(189,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(189,5)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(189,5)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 0.560 
      remark #15478: estimated potential speedup: 6.410 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(189,5)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(189,5)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at spatscal.c(262,7) inlined into spatscal.c(189,5)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at spatscal.c(269,7) inlined into spatscal.c(189,5)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between p0m1[i] (271:9) and p0[i] (272:9)
      remark #25439: unrolled with remainder by 16  
   LOOP END

   LOOP BEGIN at spatscal.c(269,7) inlined into spatscal.c(189,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(288,3) inlined into spatscal.c(190,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(190,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(190,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 3.730 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(190,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(190,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(288,3) inlined into spatscal.c(191,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(191,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(191,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 3.730 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(191,5)
   <Remainder loop for vectorization>
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at spatscal.c(296,5) inlined into spatscal.c(191,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at spatscal.c(311,3) inlined into spatscal.c(229,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between *s1 (322:7) and *d1 (323:8)

   LOOP BEGIN at spatscal.c(320,5) inlined into spatscal.c(229,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between *s1 (322:7) and *d1 (323:8)
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at spatscal.c(320,5) inlined into spatscal.c(229,3)
   <Remainder>
   LOOP END
LOOP END
===========================================================================
