Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -c -o recon.o

Begin optimization report for: form_component_prediction()

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at recon.c(351,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at recon.c(353,9)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 10 
      remark #15477: vector cost: 4.250 
      remark #15478: estimated potential speedup: 2.290 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at recon.c(353,9)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at recon.c(353,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at recon.c(353,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at recon.c(365,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between s[i] (367:9) and d[i] (369:11)

   LOOP BEGIN at recon.c(367,9)
      remark #25401: memcopy(with guard) generated
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at recon.c(367,9)
      <Multiversioned v2>
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at recon.c(367,9)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at recon.c(381,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at recon.c(383,9)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 3 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 14 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 3.000 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at recon.c(383,9)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at recon.c(383,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at recon.c(383,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at recon.c(395,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at recon.c(397,9)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at recon.c(397,9)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 0.560 
      remark #15478: estimated potential speedup: 6.410 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at recon.c(397,9)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at recon.c(397,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at recon.c(397,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at recon.c(411,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at recon.c(413,9)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 3 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 14 
      remark #15477: vector cost: 4.500 
      remark #15478: estimated potential speedup: 3.000 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at recon.c(413,9)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at recon.c(413,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at recon.c(413,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at recon.c(425,7)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at recon.c(427,9)
   <Peeled loop for vectorization, Multiversioned v1>
      remark #25015: Estimate of max trip count of loop=15
   LOOP END

   LOOP BEGIN at recon.c(427,9)
   <Multiversioned v1>
      remark #25228: Loop multiversioned for Data Dependence
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 9 
      remark #15477: vector cost: 0.560 
      remark #15478: estimated potential speedup: 6.410 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at recon.c(427,9)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at recon.c(427,9)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at recon.c(427,9)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at recon.c(441,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between d[i] (445:11) and d[i] (446:11)

   LOOP BEGIN at recon.c(443,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed ANTI dependence between s[i] (445:11) and d[i] (446:11)
      remark #25439: unrolled with remainder by 16  
   LOOP END

   LOOP BEGIN at recon.c(443,9)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at recon.c(455,7)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between d[i] (459:11) and d[i] (459:11)

   LOOP BEGIN at recon.c(457,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between d[i] (459:11) and s[i] (459:11)
      remark #25439: unrolled with remainder by 4  
   LOOP END

   LOOP BEGIN at recon.c(457,9)
   <Remainder>
   LOOP END
LOOP END
===========================================================================
