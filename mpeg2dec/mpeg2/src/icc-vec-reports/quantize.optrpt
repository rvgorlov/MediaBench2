Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.2.174 Build 20170213

Compiler options: -O3 -xHost -qopt-report3 -qopt-report-phase=vec,loop -qopt-report-embed -o quantize.o -c

Begin optimization report for: quant_intra()

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at quantize.c(57,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between src[i] (59:5) and dst[i] (74:5)
LOOP END
===========================================================================

Begin optimization report for: quant_non_intra()

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at quantize.c(100,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between src[i] (102:5) and dst[i] (116:10)
LOOP END
===========================================================================

Begin optimization report for: iquant_intra()

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at quantize.c(185,3) inlined into quantize.c(133,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between src[i] (187:5) and dst[i] (194:5)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at quantize.c(185,3) inlined into quantize.c(133,5)
<Remainder>
LOOP END

LOOP BEGIN at quantize.c(137,5)
<Multiversioned v1>
   remark #25228: Loop multiversioned for Data Dependence
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 4 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 28 
   remark #15477: vector cost: 9.500 
   remark #15478: estimated potential speedup: 2.490 
   remark #15487: type converts: 5 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=15
LOOP END

LOOP BEGIN at quantize.c(137,5)
<Remainder loop for vectorization, Multiversioned v1>
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at quantize.c(137,5)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   remark #25457: Number of partial sums replaced: 1
LOOP END

LOOP BEGIN at quantize.c(137,5)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: iquant_non_intra()

    Report from: Loop nest & Vector optimizations [loop, vec]


LOOP BEGIN at quantize.c(205,3) inlined into quantize.c(157,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between src[i] (207:5) and dst[i] (218:5)
   remark #25438: unrolled without remainder by 2  
LOOP END

LOOP BEGIN at quantize.c(161,5)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between src[i] (163:7) and dst[i] (166:13)
   remark #25438: unrolled without remainder by 2  
LOOP END
===========================================================================
